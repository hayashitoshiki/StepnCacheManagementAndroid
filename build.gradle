// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        compose_version = "1.1.1"
        kotlin_version = "1.6.10"
        hilt_version = "2.37"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

subprojects {
    switch (project.name) {
        case 'app':
            apply plugin: 'com.android.application'
            break
        default:
            apply plugin: 'com.android.library'
            break
    }

    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'dagger.hilt.android.plugin'

    android {
        compileSdkVersion 31
        buildToolsVersion "30.0.3"

        defaultConfig {
            minSdkVersion 26
            targetSdkVersion 31
            versionCode 1
            versionName "1.0"

            // For LeakCanary in instrumentation tests
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            testInstrumentationRunnerArgument "listener", "leakcanary.FailTestOnLeakRunListener"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments += [
                            "room.schemaLocation"  : "$projectDir/schemas".toString(),
                            "room.incremental"     : "true",
                            "room.expandProjection": "true"]
                }
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
            debug {
                testCoverageEnabled true
            }
        }
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
            xmlReport true
        }
        testOptions {
            unitTests.includeAndroidResources = true
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        kotlinOptions {
            jvmTarget = '11'
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

        // Room
        def room_version = "2.3.0"
        implementation "androidx.room:room-runtime:$room_version"
        implementation "androidx.room:room-ktx:$room_version"
        kapt "androidx.room:room-compiler:$room_version"

        // Hilt
        implementation "com.google.dagger:hilt-android:$hilt_version"
        kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

        // test
        testImplementation 'junit:junit:4.13.1'
        testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
        androidTestImplementation 'androidx.test.ext:junit:1.1.3'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}